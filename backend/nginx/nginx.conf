user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

http {

	 # If trying to access to non SSL connection
    server {
        listen 80;
		server_name _;
        return 301 https://__TEMP_SERV__$request_uri;
    }

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;

		ssl_certificate /etc/nginx/ssl/inception.crt;
		ssl_certificate_key /etc/nginx/ssl/inception.key;

		if ($host = localhost) {
			return 301 https://__TEMP_SERV__$request_uri;
		}
	}

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	upstream mysite{
    server django:8000;
	}

	server {

		# listen on port 443 for incoming ipV4 connections
		listen 443 ssl default_server;
		# listen on port 443 for incoming ipV6 connections
		listen [::]:443 ssl default_server;

		#SSL/TLS Configuration
		ssl_certificate /etc/nginx/ssl/inception.crt;
		ssl_certificate_key /etc/nginx/ssl/inception.key;

		#root and index and server_name
		root /var/www/;
		index /frontend/index.html;

		# The underscore is a catch-all for server names (hostnames). 
		# This means this server block will respond to all requests that do not match a server name in another server block.
		server_name _;

		# Add index.php to the list if you are using PHP
		index index.php index.html index.htm index.nginx-debian.html;

        # inside the location block, we use try_files to check if the requested file exists.
        # If it does, Nginx will serve it. If it doesnâ€™t, Nginx will respond with a 404 error.
        # URI: Uniform Resource Identifier which is a string of characters used to identify a resource
        # $uri: current request URI ex: /index.php
        # $uri/: current request URI with a trailing slash ex: /index.php/
		# location / {
		# 	try_files $uri $uri/ =404;
		# }

		location /api/ {
        proxy_pass https://mysite;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Referer $http_referer;
        proxy_set_header Host $host;
        proxy_redirect off;
    	}

		location /admin/ {
        proxy_pass https://mysite;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    	}

		location /static/ {
        	alias /var/www/backend/staticfiles/;
    	}
		
	}
	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
